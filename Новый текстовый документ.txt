//ПОДКЛЮЧЕНИЕ (неважно)
        cn = new SqlConnection(@"data source=LAPTOP-9SF09P2S\SQLEXPRESS;initial catalog=Library;integrated security=True");

00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
//ДОБАВЛЕНИЕ
 	BesprozvannykhDBEntities dBEntities = new BesprozvannykhDBEntities();
        private bool isAdd;
        Product _product;
        public AddProductForm(Product product, bool isAdd)
        {

            InitializeComponent();
            this.isAdd = isAdd;
            _product = product;
            if (isAdd)
            {
                RegLabel.Text = "Добавление товара";
            }
            else
            {
                RegLabel.Text = "";
                productArticleNumber.Text = _product.ProductArticleNumber;
                productName.Text = _product.ProductName;
                description.Text = _product.ProductDescription;
                productCategory.Text = _product.ProductCategory;
                productManufacturer.Text = _product.ProductManufacturer;
                productCost.Text = _product.ProductCost.ToString();
                productDiscountAmount.Text = _product.ProductDiscountAmount.ToString();
                productQuantityInStock.Text = _product.ProductQuantityInStock.ToString();
                if (_product.ProductPhoto != null && _product.ProductPhoto.Length > 0)
                {
                    using (MemoryStream ms = new MemoryStream(Convert.ToInt32(_product.ProductPhoto)))
                    {
                        imgProduct.Image = Image.FromStream(ms);
                    }
                }
                else
                {
                    //imgProduct.ImageLocation = "C:\\Users\\ДНС\\source\\repos\\WinFormsAppDB\\images";
                    imgProduct.Image = Properties.Resources.picture;
                }

            }
        }
        private void AddImgBtn_Click(object sender, EventArgs e)
        {
            OpenFileDialog file = new OpenFileDialog
            {
                Filter = "Image Files(*.png; *.jpg; *.jpeg)|*.png; *.jpg; *.jpeg|All files(*.*)|*.*"
            };
            if (file.ShowDialog() == DialogResult.OK)
            {
                imgProduct.ImageLocation = file.FileName;
            }
        }

        private void saveBtn_Click(object sender, EventArgs e)
        {
            if (string.IsNullOrWhiteSpace(productArticleNumber.Text) || string.IsNullOrWhiteSpace(productName.Text) ||
                string.IsNullOrWhiteSpace(description.Text) || string.IsNullOrWhiteSpace(productCategory.Text) ||
                string.IsNullOrWhiteSpace(productManufacturer.Text) || string.IsNullOrWhiteSpace(productCost.Text) ||
                string.IsNullOrWhiteSpace(productDiscountAmount.Text) || string.IsNullOrWhiteSpace(productQuantityInStock.Text) ||
                string.IsNullOrWhiteSpace(productMaxDiscoun.Text) || string.IsNullOrWhiteSpace(productProvider.Text)
                )
            {
                MessageBox.Show("Заполните все поля.");
                return;
            }
            if (!decimal.TryParse(productCost.Text, out decimal cost) || cost < 0)
            {
                MessageBox.Show("Введите корректную стоимость товара.");
                return;
            }
            if (!int.TryParse(productQuantityInStock.Text, out int quantityInStock) || quantityInStock < 0)
            {
                MessageBox.Show("Введите корректное количество товара в наличии.");
                return;
            }

            if (isAdd)
            {
                try 
                { 
                    var newProduct = new Product
                    {
                        ProductArticleNumber = productArticleNumber.Text,
                        ProductName = productName.Text,
                        ProductDescription = description.Text,
                        ProductCategory = productCategory.Text,
                        ProductManufacturer = productManufacturer.Text,
                        ProductCost = Convert.ToDecimal(productCost.Text),
                        ProductDiscountAmount = (byte)Math.Round(Convert.ToDecimal(productDiscountAmount.Text)),
                        ProductQuantityInStock = Convert.ToInt32(productQuantityInStock.Text),
                    };
                    if (dBEntities.Product.Any(p => p.ProductArticleNumber == productArticleNumber.Text))
                    {
                        MessageBox.Show("Продукт с таким артикулом уже существует.");
                        return;
                    }
                    string filePath = imgProduct.ImageLocation;
                    if (string.IsNullOrEmpty(filePath))
                    {
                        newProduct.ProductPhoto = null;
                    }
                    else
                    {
                        string[] imagePaths = File.ReadAllLines(filePath);
                        newProduct.ProductPhoto = imagePaths.ToString();
                    }
                    dBEntities.Product.Add(newProduct);
                    dBEntities.SaveChanges();
                    MessageBox.Show("Товар успешно добавлен!");
                    this.Close();
                    AdminForm adminForm = new AdminForm(null,null,null);
                    adminForm.Show();
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Ошибка при добавлении товара: " + ex.Message);
                }
            }
            else
            {
                _product.ProductArticleNumber = productArticleNumber.Text;
                _product.ProductName = productName.Text;
                _product.ProductDescription = description.Text;
                _product.ProductCategory = productCategory.Text;
                _product.ProductManufacturer = productManufacturer.Text;
                _product.ProductCost = Convert.ToDecimal(productCost.Text);
                _product.ProductDiscountAmount = (byte)Math.Round(Convert.ToDecimal(productDiscountAmount.Text));
                _product.ProductQuantityInStock = Convert.ToInt32(productQuantityInStock.Text);

                string filePath = imgProduct.ImageLocation;
                if (!string.IsNullOrEmpty(filePath))
                {
                    string[] imagePaths = File.ReadAllLines(filePath);
                    _product.ProductPhoto = imagePaths.ToString();

                }
                MessageBox.Show("Изменения успешно сохранены!");
                this.Close();
            }

        }
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
//ИЗОБРАЖЕНИЕ
		//вывод
		PictureBox productImage = new PictureBox();
                productImage.SizeMode = PictureBoxSizeMode.StretchImage;
                productImage.Width = 150;
                productImage.Height = 100;
                if (product.ProductPhoto != null && product.ProductPhoto.Length > 0)
                {
                    //using (MemoryStream ms = new MemoryStream(Convert.ToInt32(product.ProductPhoto)))
                    //{
                    //    productImage.Image = Image.FromStream(ms);
                    //}
                    if(product.ProductPhoto== "B111C5.JPEG") productImage.Image = Properties.Resources.B111C5;
                    else if (product.ProductPhoto == "E112C6.JPG") productImage.Image = Properties.Resources.E112C6;
                    else productImage.Image = Properties.Resources.picture;
                }
                else
                {
                    productImage.Image = Properties.Resources.picture;
                }
                productImage.Top = (productCard.Height - productImage.Height) / 2;
                productImage.Left = 10;

00000000000000000000000000000000000000000000000000000000000000000000000000000000000000
//ВЫВОД
namespace Task_4_Library
{
    public partial class BookListForm : Form
    {
        LibraryEntities libraryEntities = new LibraryEntities();
        private List<Book> allBooks;
        private int userRole;
        private int currentPage = 1;
        private int _itemsPerPage = 3;
        private string _selectedSort = "Без сортировки";
        public BookListForm(string ufn, int ur)
        {
            InitializeComponent();
            CenterToScreen();
            userRole = ur;
            FullName.Text=ufn;

            if (userRole == 1 || userRole == 2)
            {
                addBtn.Visible = true;
                comboBox1.Visible = true;
            }
            else
            {
                addBtn.Visible = false;
                comboBox1.Visible = false;
            }
        }

        private void LogInBtn_Click(object sender, EventArgs e)
        {
            this.Hide();
            LoginForm loginForm =new LoginForm();
            loginForm.Show();
        }

        private void BookListForm_Load(object sender, EventArgs e)
        {
            allBooks = libraryEntities.Book.ToList();
            GenerateCards(tableLayoutPanel1, allBooks, userRole);
            comboBox1.Items.Add("Без сортировки");
            comboBox1.Items.Add("По убыванию даты выдачи");
            comboBox1.SelectedIndex = 0;
        }
        public static void GenerateCards(TableLayoutPanel tableLayoutPanel1, List<Book> books, int userRole)
        {
            User user = new User();
            int row = 0;
            foreach (Book book in books)
            {
                Panel bookCard = new Panel();
                bookCard.BorderStyle = BorderStyle.FixedSingle;
                bookCard.Width = tableLayoutPanel1.ClientSize.Width / 1 - 10;
                bookCard.Height = 170;

                //PictureBox bookImage = new PictureBox();
                //bookImage.SizeMode = PictureBoxSizeMode.StretchImage;
                //bookImage.Width = 150;
                //bookImage.Height = 100;
                //if (book.BookInvenoryNumber != 0)
                //{
                //    if (book.BookInvenoryNumber == 1001) bookImage.Image = Properties.Resources.a1;
                //    else if (book.BookInvenoryNumber == 1002) bookImage.Image = Properties.Resources.a2;
                //    else bookImage.Image = Properties.Resources.picture;
                //}
                //else
                //{
                //    bookImage.Image = Properties.Resources.picture;
                //}

                //bookImage.Top = (bookCard.Height - bookImage.Height) / 2;
                //bookImage.Left = 10;

                Panel separationPanel = new Panel();
                separationPanel.Width = 2;
                separationPanel.Height = bookCard.Height - 20;
                separationPanel.BackColor = Color.Black;
                separationPanel.Top = 5;
                //separationPanel.Left = bookImage.Right + 20;
                bookCard.Controls.Add(separationPanel);

                System.Windows.Forms.Label bookNameLabel = new System.Windows.Forms.Label();
                bookNameLabel.Text = "Название книги:";
                bookNameLabel.TextAlign = ContentAlignment.MiddleRight;
               // bookNameLabel.Width = bookImage.Width - 10;
                bookNameLabel.Top = 0;
                //bookNameLabel.Left = bookImage.Right - 10;
                bookCard.Controls.Add(bookNameLabel);

                System.Windows.Forms.Label bookName = new System.Windows.Forms.Label();
                bookName.Text = book.BookName;
                bookName.TextAlign = ContentAlignment.MiddleLeft;
                bookName.Width = bookCard.Width - 10;
                bookName.Top = 0;
                bookName.Left = bookNameLabel.Right + 10;
                bookCard.Controls.Add(bookName);

                System.Windows.Forms.Label authorLabel = new System.Windows.Forms.Label();
                authorLabel.Text = "Автор:";
                authorLabel.TextAlign = ContentAlignment.MiddleRight;
                //authorLabel.Width = bookImage.Width - 10;
                authorLabel.Top = bookName.Bottom + 0;
                //authorLabel.Left = bookImage.Right - 10;
                bookCard.Controls.Add(authorLabel);

                System.Windows.Forms.Label bookAuthor = new System.Windows.Forms.Label();
                bookAuthor.Text = book.BookAuthor;
                bookAuthor.TextAlign = ContentAlignment.MiddleLeft;
                bookAuthor.MaximumSize = new Size(bookCard.Width - 250, 0);
                bookAuthor.AutoSize = true;
                bookAuthor.Top = authorLabel.Top + 5;
                bookAuthor.Left = authorLabel.Right + 10;
                bookCard.Controls.Add(bookAuthor);

                System.Windows.Forms.Label bookInvenoryNumberLabel = new System.Windows.Forms.Label();
                bookInvenoryNumberLabel.Text = "Номер:";
                bookInvenoryNumberLabel.TextAlign = ContentAlignment.MiddleRight;
                //bookInvenoryNumberLabel.Width = bookImage.Width - 10;
                bookInvenoryNumberLabel.Top = bookAuthor.Bottom + 5;
                //bookInvenoryNumberLabel.Left = bookImage.Right - 10;
                bookCard.Controls.Add(bookInvenoryNumberLabel);

                System.Windows.Forms.Label InvenoryNumber = new System.Windows.Forms.Label();
                InvenoryNumber.Text = book.BookInvenoryNumber.ToString();
                InvenoryNumber.TextAlign = ContentAlignment.MiddleLeft;
                //InvenoryNumber.Width = bookCard.Width - bookImage.Width - 40;
                InvenoryNumber.Top = bookInvenoryNumberLabel.Top + 0;
                InvenoryNumber.Left =bookNameLabel.Right + 10;
                bookCard.Controls.Add(InvenoryNumber);

                System.Windows.Forms.Button infoButton = new System.Windows.Forms.Button();
                infoButton.Text = "Выбрать книгу";
                infoButton.Name = "infoButton";
                infoButton.Size = new Size(100, 30);
                infoButton.Location = new Point(bookCard.Width - infoButton.Width - 10, bookCard.Height - infoButton.Height - 10);
                infoButton.Top = bookNameLabel.Bottom + 5;
                infoButton.BackColor = Color.FromArgb(224, 224, 224);
                infoButton.FlatStyle = FlatStyle.Flat;
                infoButton.FlatAppearance.BorderSize = 1;
                infoButton.FlatAppearance.BorderColor = Color.FromArgb(224, 224, 224);
                bookCard.Controls.Add(infoButton);
                infoButton.Click += (sender, args) => {
                    LibraryEntities libraryEntities = new LibraryEntities();
                    var bookToDelete = libraryEntities.Book.FirstOrDefault(b => b.BookInvenoryNumber == book.BookInvenoryNumber);
                    if (bookToDelete != null)
                    {
                        DialogResult result = MessageBox.Show("Вы хотите удалить эту книгу?", "Удаление книги", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                        if (result == DialogResult.Yes)
                        {
                            libraryEntities.Book.Attach(bookToDelete);
                            libraryEntities.Book.Remove(bookToDelete);
                            libraryEntities.SaveChanges();
                            MessageBox.Show("Книга успешно удалена", "Удаление книги", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        }
                        else if(result == DialogResult.No)
                        {
                            DialogResult result1 = MessageBox.Show("Вы хотите изменить информацию об этой книге?", "Редактирование книги", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                            if (result1 == DialogResult.Yes)
                            {
                                libraryEntities.Book.Attach(bookToDelete);
                                libraryEntities.Book.Remove(bookToDelete);
                                AddBookForm addBookForm = new AddBookForm(bookToDelete, false);                                
                                addBookForm.Show();
                                libraryEntities.SaveChanges();
                            }
                        }
                    }
                    else
                    {
                        MessageBox.Show("Книга не найдена", "Удаление книги", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    }
                };
                infoButton.BringToFront();
                tableLayoutPanel1.Controls.Add(bookCard, row / 1, row % 1);
                row++;

                
                if (userRole == 1 || userRole == 2)
                {
                    infoButton.Visible = true;
                    
                }
                else
                {
                    infoButton.Visible = false;
                }
            }
        }
        private void UpdateProductCards()
        {
            string searchString = textBox1.Text;
            var books = libraryEntities.Book
           .Where(p => p.BookName.Contains(searchString) || p.BookAuthor.Contains(searchString) ||
               p.BookInvenoryNumber.ToString().Contains(searchString)
               ).ToList();

            //СОРТИРОВКА ПО ДАТЕ
            //var books2 = libraryEntities.Register;
            //if (_selectedSort == "По убыванию даты выдачи")
            //{
            //    books2 = books2.OrderByDescending(p => p.RegisterDateIssue).ToList();
            //}

            //var books = libraryEntities.Register;
            if (_selectedSort == "По убыванию даты выдачи")
            {
                books = books.OrderByDescending(p => p.BookName).ToList();
            }

            int startIndex = (currentPage - 1) * _itemsPerPage;
            int endIndex = startIndex + _itemsPerPage;

            books = books.Skip(startIndex).Take(_itemsPerPage).ToList();
            tableLayoutPanel1.Controls.Clear();
            GenerateCards(tableLayoutPanel1, books, userRole);
            int count = books.Count;
        }
        private void leftBtn_Click(object sender, EventArgs e)
        {
            if (currentPage > 1)
            {
                currentPage--;
                UpdateProductCards();
            }
        }

        private void RightBtn_Click(object sender, EventArgs e)
        {
            int totalPages = (int)Math.Ceiling((double)allBooks.Count / _itemsPerPage);
            if (currentPage < totalPages)
            {
                currentPage++;
                UpdateProductCards();
            }
        }

        private void label2_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void textBox1_TextChanged(object sender, EventArgs e)
        {
            currentPage = 1;
            UpdateProductCards();
        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            _selectedSort = comboBox1.SelectedItem.ToString();
            UpdateProductCards();
        }
        bool isAdd;
        private void button1_Click(object sender, EventArgs e)
        {
            isAdd = true;
            this.Hide();
            AddBookForm addBookForm = new AddBookForm(null, true);
            addBookForm.Show();
        }
    }
}
